@page "/activitiesedit/{activityId:int}"
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject IActivityService ActivityService
@inject NavigationManager NavigationManager
@inject HttpClient Http
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text
@using System.Net
@using BunnySurfers.API.Entities


<h2>Edit Activity</h2>

<EditForm Model="@activity" OnValidSubmit="EditActivity" FormName="EditActivityForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="activity.Name" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText id="description" class="form-control" @bind-Value="activity.Description" />
    </div>
    @* <div class="mb-3">
        <label for="activityType" class="form-label">Activity Type</label>
        <input id="activityType" class="form-control" @bind-Value="activity.ActivityType" />
    </div> *@
  @*   <div class="mb-3">
        <label for="startTime" class="form-label">Start Time</label>
        <InputDate id="startTime" class="form-control" @bind-Value="activity.StartTime" />
    </div>
    <div class="mb-3">
        <label for="endTime" class="form-label">End Time</label>
        <InputDate id="endTime" class="form-control" @bind-Value="activity.EndTime" />
    </div> *@

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private Activity activity = new Activity() {Name = ""};
    private Activity activityyew;
    [Parameter]
    public int activityId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        activity = await ActivityService.GetActivityById(activityId);
        if (activity == null)
        {
            NavigationManager.NavigateTo("/TeachersPage");
        }
    }

    private async Task EditActivity()
    {
        activityyew = new Activity
            {
                Name = activity.Name, 
                Description = activity.Description,
                // StartTime = activity.StartTime,
                // EndTime = activity.EndTime,
                ActivityType = activity.ActivityType,
                ModuleId = activity.ModuleId
            };


        await ActivityService.UpdateActivity(activityId, activityyew);
        NavigationManager.NavigateTo("/TeachersPage");
        StateHasChanged();
    }

}

