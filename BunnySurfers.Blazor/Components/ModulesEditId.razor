@page "/modulesedit/{moduleId:int}"
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject  IModuleService ModuleService
@inject NavigationManager NavigationManager
@inject HttpClient Http
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text
@using System.Net
@using BunnySurfers.API.Entities


<h2>Edit Module</h2>

<EditForm Model="@module" OnValidSubmit="EditModule" FormName="EditModuleForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="module.Name" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText id="description" class="form-control" @bind-Value="module.Description" />
    </div>
    <div class="mb-3">
        <label for="startDate" class="form-label">Start Date</label>
        <InputDate id="startDate" class="form-control" @bind-Value="module.StartDate" />
    </div>
    <div class="mb-3">
        <label for="endDate" class="form-label">End Date</label>
        <InputDate id="endDate" class="form-control" @bind-Value="module.EndDate" />
    </div>
    <div class="mb-3">
        <label for="courseId" class="form-label">course Id </label>
        <InputNumber id="courseId" class="form-control" @bind-Value="module.CourseId" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {


    private Module module = new Module() { Name = "" };
    private Module moduleyew;
    [Parameter] 
    public int moduleId { get; set; }
    

    protected override async Task OnInitializedAsync()
    {
        module = await ModuleService.GetModuleById(moduleId);
        if (module == null)
        {
            NavigationManager.NavigateTo("/TeachersPage");
        }
    }

    private async Task EditModule()
    {
        moduleyew = new Module
            {
                Name = module.Name, // Initialize with an appropriate default value
                Description = module.Description,
                StartDate = module.StartDate,
                EndDate = module.EndDate,
                CourseId = module.CourseId
            };


        await ModuleService.UpdateModule(moduleId, moduleyew);
        NavigationManager.NavigateTo("/TeachersPage");
        StateHasChanged(); // Se till att anropa StateHasChanged() här
    }

}
