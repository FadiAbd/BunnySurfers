@page "/coursesedit/{courseId:int}"
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject ICourseService CourseService
@inject NavigationManager NavigationManager
@inject HttpClient Http
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text
@using System.Net
@using BunnySurfers.API.Entities


<h2>Edit Course</h2>

<EditForm Model="@course" OnValidSubmit="EditCourse" FormName="EditCourseForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="course.Name" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText id="description" class="form-control" @bind-Value="course.Description" />
    </div>
    <div class="mb-3">
        <label for="startDate" class="form-label">Start Date</label>
        <InputDate id="startDate" class="form-control" @bind-Value="course.StartDate" />
    </div>
    <div class="mb-3">
        <label for="endDate" class="form-label">End Date</label>
        <InputDate id="endDate" class="form-control" @bind-Value="course.EndDate" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private Course course = new Course();
    private Course courseyew;
    [Parameter] public int courseId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        course = await CourseService.GetCourseById(courseId);
        if (course == null)
        {
            NavigationManager.NavigateTo("/TeachersPage");
        }
    }

    private async Task EditCourse()
    {
        courseyew = new Course
            {
                Name = course.Name, // Initialize with an appropriate default value
                Description = course.Description,
                StartDate = course.StartDate,
                EndDate = course.EndDate
            };


        await CourseService.UpdateCourse(courseId, courseyew);
        NavigationManager.NavigateTo("/TeachersPage");
        StateHasChanged(); // Se till att anropa StateHasChanged() här
    }

}
