@page  "/createmodule"
@inject IModuleService ModuleService
@inject NavigationManager Navigation
@rendermode @(new InteractiveServerRenderMode(prerender:false))


 <h1>Create Module</h1>

<EditForm Model="module" OnValidSubmit="HandleValidSubmit" FormName="EditModuleForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
   

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="module.Name" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText id="description" class="form-control" @bind-Value="module.Description" />
    </div>
    <div class="mb-3">
        <label for="startDate" class="form-label">Start Date</label>
        <InputDate id="startDate" class="form-control" @bind-Value="module.StartDate" />
    </div>
    <div class="mb-3">
        <label for="endDate" class="form-label">End Date</label>
        <InputDate id="endDate" class="form-control" @bind-Value="module.EndDate" />
    </div>
    <div class="mb-3">
        <label for="courseId" class="form-label">course Id </label>
        <InputNumber id="courseId" class="form-control" @bind-Value="module.CourseId" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter]
    public int? moduleId { get; set; }

    private Module module = new Module
        {
            Name = "", // Initialize with an appropriate default value
            Description = "",
            StartDate = DateOnly.FromDateTime(DateTime.Today),
            EndDate = DateOnly.FromDateTime(DateTime.Today.AddDays(30)),
            CourseId = 0
        };


    private async Task HandleValidSubmit()
    {

        if (module.ModuleId == 0)
        {
            await ModuleService.CreateModule(module);
        }

        Navigation.NavigateTo("/TeachersPage");
    }
}