@using BunnySurfers.API.DTOs;
@page "/modules/{ModuleId:int}/create_activity"
@inject NavigationManager Navigation
@inject IActivityService ActivityService
@rendermode @(new InteractiveServerRenderMode(prerender:false))


<h1>Create Activity</h1>

<EditForm Model="activity" OnValidSubmit="HandleValidSubmit" FormName="CreateActivityForm">
    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="activity.Name" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText id="description" class="form-control" @bind-Value="activity.Description" />
    </div>
    <div class="mb-3">
        <label for="activityType" class="form-label">Activity Type</label>
        <InputSelect id="activityType" class="form-control" @bind-Value="activity.ActivityType">
            @foreach (ActivityType type in Enum.GetValues(typeof(ActivityType)))
            {

                <option value="@type">@type</option>
            }
        </InputSelect>
    </div>
    <div class="mb-3">
        <label for="startTime" class="form-label">Start Time</label>
        <InputDate Type="InputDateType.DateTimeLocal" id="startTime" class="form-control" @bind-Value="activity.StartTime" />
    </div>
    <div class="mb-3">
        <label for="endTime" class="form-label">End Time</label>
        <InputDate Type="InputDateType.DateTimeLocal" id="endTime" class="form-control" @bind-Value="activity.EndTime" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code
{
    [Parameter]
    public int ModuleId { get; set; }
    
    private ActivityEditDTO activity = new ActivityEditDTO()
    {
        Name = ""
    };

    protected override void OnParametersSet()
    {
        activity.ModuleId = this.ModuleId;
    }

    private async Task HandleValidSubmit()
    {
        await ActivityService.CreateActivity(activity);

        // Or course page, or module page?
        Navigation.NavigateTo("/TeachersPage");
    }

}


